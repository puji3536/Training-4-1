#print sum of cost for each path
'''
Graph
     2   3
   5---7---4 1
 1 |   /4  | \--2
   |  /   5| /1
   3-------8
       2
'''
#d={5:[(7,2),(3,1)],7:[(5,2),(4,3),(3,4)],4:[(7,3),(8,5),(2,1)],8:[(3,2),(4,5),(2,1)],3:[(5,1),(7,4),(8,2)],2:[(4,1),(8,1)]}

def dfs(n,d,l,cost):
    if l==None:
        l=[]
    l.append(n)
    if n == 2:
        print(l,cost)
        l.pop()
        return
    for i in d[n]:
        if i[0] not in l:  
            dfs(i[0],d,l,cost+i[1]) 
    l.pop()

d={5:[(7,2),(3,1)],7:[(5,2),(4,3),(3,4)],4:[(7,3),(8,5),(2,1)],8:[(3,2),(4,5),(2,1)],3:[(5,1),(7,4),(8,2)],2:[(4,1),(8,1)]}
l = []
dfs(5, d,None,0)